buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.codehaus.groovy:groovy-json:3.0.17'
    }
}

plugins {
    id 'java'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url "https://maven.pkg.jetbrains.space/public/p/closure-templates/maven" }
}

// ✅ Load dependencies from package.json
def pkgJson = new groovy.json.JsonSlurper().parse(file('package.json'))
def javaDeps = pkgJson.javaDependencies ?: []

dependencies {
    javaDeps.each { dep ->
        implementation dep
    }
}

// ✅ Fat JAR to compiler/SoyCompiler.jar
// No main class needed since we're calling statically

tasks.register('fatJar', Jar) {
    group = 'build'
    description = 'Creates a standalone JAR for MyCompiler with all dependencies'

    archiveBaseName.set('SoyCompiler')
    archiveVersion.set('')
    archiveClassifier.set('')
    destinationDirectory.set(file("$rootDir/compiler"))

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from sourceSets.main.output

    manifest {
        attributes 'Created-By': 'Gradle'
    }
}

tasks.named('build') {
    dependsOn tasks.named('fatJar')
}
