plugins {
    id 'java'
}

import groovy.json.JsonSlurper

def pkgJson = new JsonSlurper().parse(file('package.json'))
def javaVersion = pkgJson.engines?.java?.replaceAll(/[^\\d]/, "") ?: "17"
def javaDeps = pkgJson.javaDependencies ?: []

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(javaVersion.toInteger())
    }
}

repositories {
    mavenCentral()
}

dependencies {
    javaDeps.each {
        implementation it
    }
}

task compileToWasm(type: Exec) {
    dependsOn build
    group = 'build'
    description = 'Compile Java to WebAssembly using GraalVM native-image'

    def outputDir = "${projectDir}/dist"
    def mainClass = 'MyCompiler'
    def nativeImage = "${System.getenv('JAVA_HOME')}/bin/native-image"

    commandLine nativeImage,
        "--no-fallback",
        "--initialize-at-build-time",
        "--target=wasm32-wasi",
        "-H:Name=${mainClass}",
        "-H:Class=${mainClass}",
        "-cp", "build/classes/java/main",
        "src/main/java/${mainClass}.java"

    doLast {
        mkdir outputDir
        copy {
            from "${projectDir}/${mainClass}.wasm"
            into outputDir
        }
    }
}
